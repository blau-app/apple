//
// DefaultAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

open class DefaultAPI {

    /**

     - parameter v1GetTokenBundlesPostRequest: (body)  (optional)
     - returns: V1GetTokenBundlesPost200Response
     */
    @available(macOS 10.15, iOS 13.0, tvOS 13.0, watchOS 6.0, *)
    open class func v1GetTokenBundlesPost(v1GetTokenBundlesPostRequest: V1GetTokenBundlesPostRequest? = nil) async throws -> V1GetTokenBundlesPost200Response {
        return try await v1GetTokenBundlesPostWithRequestBuilder(v1GetTokenBundlesPostRequest: v1GetTokenBundlesPostRequest).execute().body
    }

    /**
     - POST /v1/getTokenBundles
     - Get Token Bundles
     - parameter v1GetTokenBundlesPostRequest: (body)  (optional)
     - returns: RequestBuilder<V1GetTokenBundlesPost200Response> 
     */
    open class func v1GetTokenBundlesPostWithRequestBuilder(v1GetTokenBundlesPostRequest: V1GetTokenBundlesPostRequest? = nil) -> RequestBuilder<V1GetTokenBundlesPost200Response> {
        let localVariablePath = "/v1/getTokenBundles"
        let localVariableURLString = OpenAPIClientAPI.basePath + localVariablePath
        let localVariableParameters = JSONEncodingHelper.encodingParameters(forEncodableObject: v1GetTokenBundlesPostRequest)

        let localVariableUrlComponents = URLComponents(string: localVariableURLString)

        let localVariableNillableHeaders: [String: Any?] = [
            "Content-Type": "application/json",
        ]

        let localVariableHeaderParameters = APIHelper.rejectNilHeaders(localVariableNillableHeaders)

        let localVariableRequestBuilder: RequestBuilder<V1GetTokenBundlesPost200Response>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return localVariableRequestBuilder.init(method: "POST", URLString: (localVariableUrlComponents?.string ?? localVariableURLString), parameters: localVariableParameters, headers: localVariableHeaderParameters, requiresAuthentication: false)
    }
}
